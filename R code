library(brms)
library(bridgesampling)
library(ggplot2)
library(tidyr)
library(dplyr)

#--------------------1. Linear Vs Quadratic----------
set.seed(123)
n <- 100
x <- rnorm(n)
y <- 1 + 2 * x + 1.5 * x^2 + rnorm(n, sd = 1)
df <- data.frame(x = x, x2 = x^2, y = y)
# Linear model
fit_linear <- brm(
  y ~ x,
  data = df,
  chains = 2, iter = 2000, warmup = 1000,
  save_pars = save_pars(all = TRUE),
  refresh = 0
)

# Quadratic model
fit_quadratic <- brm(
  y ~ x + I(x^2),  # or use x2 if you prefer
  data = df,
  chains = 2, iter = 2000, warmup = 1000,
  save_pars = save_pars(all = TRUE),
  refresh = 0
)

# Compute marginal likelihoods using bridge sampling
bridge_lin <- bridge_sampler(fit_linear)
bridge_quad <- bridge_sampler(fit_quadratic)

# Bayes Factor 
bridgesampling::bf(bridge_quad, bridge_lin)
# Estimated Bayes factor in favor of bridge_quad over bridge_lin: 1326392566269610933120202240.00000


#--------------------2. Real data--------------
data("airquality")
df <- na.omit(airquality)  

# Fit with gamma distribution (Ozone > 0 required)
model_gamma <- brm(Ozone ~ Temp + Wind,
                   data = df,
                   family = Gamma(link = "log"),
                   save_pars = save_pars(all = TRUE),
                   chains = 2, iter = 2000, seed = 123)

# Fit with lognormal distribution
model_lognormal <- brm(Ozone ~ Temp + Wind,
                       data = df,
                       family = lognormal(),
                       save_pars = save_pars(all = TRUE),
                       chains = 2, iter = 2000, seed = 123)

# Compute bridge sampling objects
bridge_gamma      <- bridge_sampler(model_gamma)
bridge_lognormal  <- bridge_sampler(model_lognormal)
# Bayes Factor 
bridgesampling::bf(bridge_gamma, bridge_lognormal)
